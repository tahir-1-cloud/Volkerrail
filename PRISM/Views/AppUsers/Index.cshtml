@using System.Security.Principal;
@using Newtonsoft.Json
@using PRISM.DTO.AppUsersModel;
@using PRISM.DTO.AppUserDTO;
@using PRISM.Models
@using Nancy.Json;
@using PRISM.DTO.Employeedto
@{
    string type = "Employees";
    var serializer = new JavaScriptSerializer();
	int RoleId = 0;
}
@if (User.Identity.IsAuthenticated)
{

    try
    {


        var roleObject = JsonConvert.DeserializeObject<List<ModuleRoleModels>>(Context.Session.GetString("UserRoles"));
        if (roleObject != null)
        {
            RoleId = roleObject[0].RoleId;
        }
        if (RoleId == 4)
        {
            RoleId = 0;
        }
    }
    catch (Exception ex)
    {

    }


}
@model AppUserListModel
<div id="apporg" class="d-flex flex-column-fluid align-items-start container-xxl">
	<div class="content flex-row-fluid" id="kt_content">
		<!--begin::Card-->
		<div class="card">
			<!--begin::Card header-->
			<div class="card-header border-0 pt-6">
				
			</div>
			<!--end::Card header-->
			<!--begin::Card body-->
			@if (RoleId == 1)
			{
				<div class="card-body pt-0">
					<!--begin::Table-->
					<table class="table align-middle table-row-dashed fs-6 gy-5" id="kt_customers_table">
						<thead>
							<tr class="text-start text-gray-400 fw-bold fs-7 text-uppercase gs-0">
								<th style="width:30px"></th>
								<th class="min-w-125px">Email</th>
								<th class="min-w-125px">Role</th>
							</tr>
						</thead>
						<tbody class="fw-semibold text-gray-600">
							@{
								if (Model.appUsers?.Count > 0)
								{
									for (int i = 0; i < Model.appUsers?.Count; i++)
									{

										var r = Model.appUsers[i];
										<tr>
											<td>
												@((i + 1).ToString())
											</td>
											<td>
												<a v-on:click="Edit('@(serializer.Serialize(r))')" class="menu-link px-3">@(string.IsNullOrEmpty(r.FullName) ? r.EmailAddress : r.FullName)</a>

											</td>

											<td>
												@r.RoleName
											</td>

										</tr>
									}
								}
							}

						</tbody>
						<!--end::Table body-->
					</table>
					<!--end::Table-->
				</div>
			}
			
			<!--end::Card body-->
		</div>
		<div class="modal fade" id="lookupmodel" tabindex="-1" aria-hidden="true">
			<!--begin::Modal dialog-->
			<div class="modal-dialog modal-dialog-centered mw-650px">
				<!--begin::Modal content-->
				<div class="modal-content">
					<!--begin::Form-->
					<form class="form" id="kt_modal_add_customer_form" >
						<!--begin::Modal header-->
						<div class="modal-header" id="kt_modal_add_customer_header">
							<!--begin::Modal title-->
							<h2 class="fw-bold">Update User</h2>
							<!--end::Modal title-->
							<!--begin::Close-->
							<div id="kt_modal_add_customer_close" v-on:click="ClosePopup()" class="btn btn-icon btn-sm btn-active-icon-primary">
								<i class="ki-duotone ki-cross fs-1">
									<span class="path1"></span>
									<span class="path2"></span>
								</i>
							</div>
							<!--end::Close-->
						</div>
						<!--end::Modal header-->
						<!--begin::Modal body-->
						<div class="modal-body py-10 px-lg-17">
							<!--begin::Scroll-->
							<div class="scroll-y me-n7 pe-7" id="kt_modal_add_customer_scroll">
								<!--begin::Input group-->
								<div class="fv-row mb-7">
									<label class="required fs-6 fw-semibold mb-2">Name</label>
									<input type="text" class="form-control form-control-solid" placeholder="" name="name" v-model="d.FullName" />
									<!--end::Input-->
								</div>
								<div class="fv-row mb-15">
									<label class="fs-6 fw-semibold mb-2">User Role</label>
									<select id="ddlUserRole" class="form-control" v-model="d.RoleId">
										@{
											if (Model.userRoles?.Count > 0)
											{
												foreach(var obj in Model.userRoles)
												{
													<option value="@obj.Id"> @obj.Name </option>
												}
											}
										}
									</select>
								</div>
							</div>
							<!--end::Scroll-->
						</div>
						<!--end::Modal body-->
						<!--begin::Modal footer-->
						<div class="modal-footer flex-center">
							<!--begin::Button-->
							<button type="button" id="kt_modal_add_customer_cancel" v-on:click="ClosePopup()" class="btn btn-light me-3">Discard</button>
							<!--end::Button-->
							<!--begin::Button-->
							<button type="button" id="kt_modal_add_customer_submit" class="btn btn-primary" v-on:click="UpdateRole($event)">
								<span class="indicator-label">Submit</span>
								<span class="indicator-progress">
									Please wait...
									<span class="spinner-border spinner-border-sm align-middle ms-2"></span>
								</span>
							</button>
							<button type="button" id="kt_modal_add_customer_cancel" v-on:click="UserLog()" class="btn btn-light me-3">User Log</button>
							<!--end::Button-->
						</div>
						<!--end::Modal footer-->
					</form>
					<!--end::Form-->
				</div>
			</div>
		</div>

		<div class="modal fade" id="ChangeLogPopup" tabindex="-1" aria-hidden="true">
			<!--begin::Modal dialog-->
			<div class="modal-dialog modal-dialog-centered mw-800px">

				<div class="modal-content" style="box-shadow:0px 0px 10px 0px">
					<div class="modal-header" style="padding-top:8px;padding-bottom:8px">
						<!--begin::Modal title-->
						<h2 id="h2Heading">User Log</h2>
						<div class="btn btn-sm btn-icon btn-active-color-primary" v-on:click="CloseChangeLogPopup()" data-bs-dismiss="modal">
							<i class="ki-duotone ki-cross fs-1">
								<span class="path1"></span>
								<span class="path2"></span>
							</i>
						</div>
						<!--end::Close-->
					</div>
					<div class="modal-body p-2">
						<div id="changeloggrid">
						</div>
					</div>
					<!--end::Modal body-->
					<!--begin::Modal footer-->
					<div class="modal-footer flex-center">
					</div>
					<!--end::Modal footer-->
					<!--end::Form-->
				</div>
			</div>
		</div>
	</div>
</div>
@section scripts{
	<link href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.min.css" rel="stylesheet" />
	<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>


	<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/23.1.3/css/dx.light.css" />
	<script src="https://cdn3.devexpress.com/jslib/23.1.3/js/dx.all.js"></script>
    <script>
        var objCommon = new Common();
        $(document).ready(function () {


            var app = new Vue({
                el: '#apporg',
                data: {
                    DataList: [],
                    d: {},
                    lookup:{},
                    AddUpdate: "Add"
                },
                methods: {
                    Delete($event) {
                        var param = {
                            Id: this.d.Id
                        };

                        objCommon.AjaxCall("/Employees/delete", JSON.stringify(param), "POST", true, function (response) {
                            objCommon.ShowMessage("Deleted.", "success");
                            location.reload();
                        }, $event.currentTarget);
                    },
                    Edit(data) {
                        var json = JSON.parse(data);
                        this.d = {};
                        this.d.FullName = json.fullName;
                        this.d.Id = json.id;
                        this.d.RoleId = json.roleId;
						$("#lookupmodel").modal("show");
                    },
                    ShowLookup($event) {
                        this.d = {};
                        this.d.Id = 0;
                    },
					UpdateRole($event) {
                        var et = this;
                        var param = et.d;
                        objCommon.AjaxCall("/AppUsers/UpdateRole", JSON.stringify(param), "POST", true, function (response) {
                            objCommon.ShowMessage("Added.", "success");
                            et.AddUpdate = "Add";
                            location.reload();
                        }, $event.currentTarget);

                    },
					ClosePopup() {
						$("#lookupmodel").modal("hide");
					},
					UserLog(){
						$("#ChangeLogPopup").modal("show");
						var dxthis = this;
						objCommon.AjaxCall("/ChangeLog/GetUserLog", $.param({ UserIdFrom: dxthis.d.Id }), "GET", true, function (response) {
							var ColumnName = [{
								dataField: "CreatedDateString", caption: "Date/By",
								calculateCellValue(data) {
									return data['CreatedDateString'] + '\r\n' + data['FullName'];
								}, width: "20%"
							}, {
								dataField: "ActionType", caption: "Action Type", width: "10%"
							}, {
								dataField: "Description", caption: "Description", width: "100%"
							}
								//, {
								//dataField: "FullName", caption: "User Name"
								//}
							]
							const employeesStore = new DevExpress.data.ArrayStore({
								key: 'Id',
								data: response,
							});
							var dataGrid = $('#changeloggrid').dxDataGrid({
								dataSource: employeesStore,
								columns: ColumnName,
								showBorders: true,
								loadPanel: {
									enabled: true,
								},
								scrolling: {
									columnRenderingMode: 'virtual',
								},
								columnsAutoWidth: true,
								paging: {
									enabled: true,
									pageSize: 15,
									pageIndex: 1
								},
								sorting: {
									mode: "multiple"
								},
								allowColumnResizing: true,
								rowAlternationEnabled: true,
							}).dxDataGrid('instance');


						});
					}

                },
                created() {

                    //GetData(null);
                    //var url = 'https://api.example.com/endpoint';
                    //var postData = {
                    //	key1: 'value1',
                    //	key2: 'value2'
                    //};

                    //// Make the POST request using Axios
                    //axios.post(url, postData)
                    //	.then(function (response) {
                    //		// Handle successful response
                    //		console.log('Response:', response.data);
                    //	})
                    //	.catch(function (error) {
                    //		// Handle error
                    //		console.error('Error:', error);
                    //	});

                },
                updated() {

                },
                mounted() {
                }
            })


            $(".nav-item").removeClass("active");
			$("#liUserManagement").addClass("active");
            $(".menu-item").removeClass("show");
            $(".menu-item").removeClass("here");
			$("#menuUserManagement").addClass("here");
			$("#menuUserManagement").addClass("show");
            $(".tab-pane").removeClass("active");
            $("#tabUserManagement").addClass("active");
            $(".tab-pane").removeClass("show");
			$("#tabUserManagement").addClass("show");
			$("#kt_customers_table").dataTable();
        })
    </script>

}