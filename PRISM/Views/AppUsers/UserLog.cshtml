@using PRISM.DTO.AppUsersModel;
@using PRISM.Models
@using Nancy.Json;
@{
    string type = "User Log";
    var serializer = new JavaScriptSerializer();
}
@model List<UserLogModel>
<div id="apporg" class="d-flex flex-column-fluid align-items-start container-xxl">
    <div class="content flex-row-fluid" id="kt_content">
        <!--begin::Card-->
        <div class="card">
            <!--begin::Card header-->
            <div class="card-header border-0">

                <div class="row pt-5" id="filterarea" style="width: 100%;">

                    <div class="col-sm-2">
                        <label>
                            From
                        </label>
                        <input type="text" id="dateFrom" class="form-control datepickerchangelog" />
                    </div>

                    <div class="col-sm-2">
                        <label>
                            To
                        </label>
                        <input type="text" id="dateTo" class="form-control datepickerchangelog" />
                    </div>
                    <div class="col-sm-6 pt-5">
                        <button class="btn btn-primary btn-sm" v-on:click="SearchChangeLogReport($event)">Search</button>
                    </div>
                </div>



            </div>
            <!--end::Card header-->
            <!--begin::Card body-->
            <div class="card-body pt-0">
                <!--begin::Table-->
                <div class="table-responsive">
                    <table class="table align-middle table-row-dashed fs-6 gy-5" id="kt_customers_table">
                        <thead>
                            <tr class="text-start text-gray-400 fw-bold fs-7 text-uppercase gs-0">
                                <th style="width:30px"></th>
                                <th class="min-w-125px">Name</th>
                                <th class="min-w-125px">Created Date</th>
                                <th class="min-w-125px">Action Type</th>
                                <th class="min-w-125px">App Name</th>
                                <th class="min-w-125px">Description</th>
                            </tr>
                        </thead>
                        <tbody class="fw-semibold text-gray-600">
                            @{
                                if (Model?.Count > 0)
                                {
                                    for (int i = 0; i < Model.Count; i++)
                                    {

                                        var r = Model[i];
                                        <tr>
                                            <td>
                                                @((i + 1).ToString())
                                            </td>
                                            <td>
                                                @r.FullName
                                            </td>
                                            <td>
                                                @{                                 
                                                    DateTime createdDate;
                                                    if (DateTime.TryParse(r.CreatedDateString, out createdDate))
                                                    {
                                                        @createdDate.ToString("dd-MM-yyyy HH:mm")
                                                    }
                                                    else
                                                    {
                                                        @r.CreatedDateString
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @r.ActionType
                                            </td>
                                            <td>
                                                @r.AppName
                                            </td>
                                            <td>
                                                @r.Description
                                            </td>
                                        </tr>
                                    }
                                }
                            }

                        </tbody>
                        <!--end::Table body-->
                    </table>
                </div>
            </div>
            <!--end::Card body-->
        </div>

    </div>
</div>
@section scripts {
    <link href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script>
        var objCommon = new Common();
        $(document).ready(function () {


            var app = new Vue({
                el: '#apporg',
                data: {
                    DataList: [],
                    d: {},
                    lookup: {},
                    AddUpdate: "Add"
                },
                methods: {
                    Delete($event) {
                        var param = {
                            Id: this.d.Id
                        };

                        objCommon.AjaxCall("/Employees/delete", JSON.stringify(param), "POST", true, function (response) {
                            objCommon.ShowMessage("Deleted.", "success");
                            location.reload();
                        }, $event.currentTarget);
                    },
                    Edit(data) {
                        var json = JSON.parse(data);
                        this.d = {};
                        this.d.FullName = json.fullName;
                        this.d.Id = json.id;
                        this.d.RoleId = json.roleId;
                        $("#lookupmodel").modal("show");
                    },
                    ShowLookup($event) {
                        this.d = {};
                        this.d.Id = 0;
                    },
                    UpdateRole($event) {
                        var et = this;
                        var param = et.d;
                        objCommon.AjaxCall("/AppUsers/UpdateRole", JSON.stringify(param), "POST", true, function (response) {
                            objCommon.ShowMessage("Added.", "success");
                            et.AddUpdate = "Add";
                            location.reload();
                        }, $event.currentTarget);

                    }

                },
                created() {

                    //GetData(null);
                    //var url = 'https://api.example.com/endpoint';
                    //var postData = {
                    //	key1: 'value1',
                    //	key2: 'value2'
                    //};

                    //// Make the POST request using Axios
                    //axios.post(url, postData)
                    //	.then(function (response) {
                    //		// Handle successful response
                    //		console.log('Response:', response.data);
                    //	})
                    //	.catch(function (error) {
                    //		// Handle error
                    //		console.error('Error:', error);
                    //	});

                },
                updated() {

                },
                mounted() {
                }
            })


            $(".nav-item").removeClass("active");
            $("#liUserManagement").addClass("active");
            $(".menu-item").removeClass("show");
            $(".menu-item").removeClass("here");
            $("#menuUserLog").addClass("here");
            $("#menuUserLog").addClass("show");
            $(".tab-pane").removeClass("active");
            $("#tabUserManagement").addClass("active");
            $(".tab-pane").removeClass("show");
            $("#tabUserManagement").addClass("show");
            $("#kt_customers_table").dataTable();
        })
    </script>

}